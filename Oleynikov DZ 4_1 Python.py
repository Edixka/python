# Подвиг 1.
# Вводится четырехзначное целое положительное число. Подумайте,
# как можно определить итератор для перебора его цифр.
# Выведите цифры этого введенного числа (с помощью итератора) в одну строчку через пробел.
# Sample Input:  4387
# Sample Output:  4 3 8 7

# lend_1 = int(input('Введите числа: '))
# string_lend_1 = str(lend_1)
# it = iter(string_lend_1)
# for x in range(0, int(len(string_lend_1))):
#     print(next(it), end=' ')


# Подвиг 2.
#  Вводится целое положительное число a. Необходимо определить генератор,
# который бы возвращал модули чисел в диапазоне [-a; a], а затем еще один,
# который бы вычислял кубы чисел (возведение в степень 3), возвращаемых первым генератором.
# Вывести в одну строчку через пробел первые четыре значения.
# (Полагается, что генератор выдает, как минимум четыре значения).
# Sample Input:
# 3
# Sample Output:
# 27 8 1 0


# it_1 = int(input('Введите число: '))
# print(*(abs(x**3) for x in range(-it_1, it_1-2)))


# Подвиг 3.
# Используя символы малых букв латинского алфавита (строка ascii_lowercase):
# from string import ascii_lowercase
# запишите генератор, который бы возвращал все сочетания из двух букв латинского алфавита.
# Выведите первые 50 сочетаний на экран в строку через пробел.
# Например, первые семь начальных сочетаний имеют вид:
# aa ab ac ad ae af ag


# from string import ascii_lowercase
#
# gen = (ascii_lowercase[x] + i for x in range(2) for i in ascii_lowercase)
# for i in range(50):
#     print(next(gen), end=' ')



# Подвиг 4. 
# На вход программы поступает строка с названиями пунктов меню,
# записанные в одну строчку через пробел. Необходимо задать функцию с именем get_menu,
# которая преобразует эту строку в список из слов и возвращает этот список.
# Сигнатура функции, следующая - def get_menu(s): ...
# Определите декоратор для этой функции с именем show_menu,
# который отображает список на экран в формате:
# Sample Input:	Главная Добавить Удалить Выйти
# Sample Output:
# 1. Главная
# 2. Добавить
# 3. Удалить
# 4. Выйти



# def show_menu(func):
#     def inner(s):
#         lst = func(s)
#         for index, value in enumerate(lst):
#             print(f"{index + 1}. {value}")
#     return inner
#
# @show_menu
# def get_menu(s):
#     return list(s.split())
#
#
# s = "Главная Добавить Удалить Выйти"
# f = get_menu(s)




# Подвиг 5. 
# Вводятся две строки из слов (слова записаны через пробел).
# Объявите функцию, которая преобразовывает эти две строки в
# два списка слов и возвращает эти списки.
# Определите декоратор для этой функции, который попарно
# объединяет эти списки. Полученный список - должен возвращаться при вызове декоратора.
# Примените декоратор к первой функции и вызовите ее для введенных строк. Результат отобразите на экране.
# Sample Input:
# house river tree car
# дом река дерево машина
# Sample Output:
#
# [('house', 'дом'), ('river', 'река'), ('tree', 'дерево'), ('car', 'машина')]



# def lep_to(fun):
#     def inner(s1,s2):
#         lst1, lst2 = fun(s1, s2)
#         d = dict()
#         for i in range(len(lst1)):
#             d[lst1[i]] = lst2[i]
#         return d
#     return inner

#
# @lep_to
# def get_list(s1, s2):
#     return list(s1.split()), list(s2.split())
#
# s1 = 'house river tree car'
# s2 = 'дом река дерево машина'
# print(*sorted(get_list(s1, s2).items()))

